#! /bin/bash

## TODO:
##       -add GUI/no-gui
##       -add args for auto
##       -add help
##       -dynamic format to keep (currently only mp3)
##       -run converter from here (currently only mp3)

## Load enviroment variables
if [ -f $HOME/bmm/.env ]; then
    . $HOME/bmm/.env
else
    echo -e "FATAL ERROR: .env not found.$\n
	Use bmm-setup_enviroment to create one.\nAborting...";
    exit 1;
fi

# Create or truncate the log file
LOG_FILE="dir_cleaner.log"
> "$LOG_FILE"

# Warn the user about the script's actions.
warn_user() {
    echo -e "                                               
    ${ERROR}Bash Media Manager - Empty Dir Cleaner${NC}
    
    ${WARN}This script will ${ERROR}DELETE${WARN} folders without ${ERROR}.mp3${WARN} files inside them.
    It assumes ${OK}Artist(metadata)/Album(mp3+metadata)${WARN} hierarchy.
    ${ERROR}Make sure all your audio is converted to ${ERROR}MP3${WARN} before continuing.
    
    Press ${OK}ENTER${WARN} to start or ${ERROR}CONTROL + C${WARN} to abort.
    "
    read
}

remove_dirs () {
    # Show banner
    if ! command -v $BANNER >> /dev/null; then echo -e "${WARN}BASH MEDIA MANAGER${NC}"; else eval $BANNER; fi
    echo -e "${HEAD}Dir Cleaner${NC}"
    echo '----------------------------------------------------------'
    dir_check "$AUDIOROOT"
    # Enter music root dir
    cd "$AUDIOROOT" || { echo 'ERROR: Could not enter directory.'; exit 1; };
    echo -e "${ERROR}Deleting folders with no MP3...${NC}"
    echo '----------------------------------------------------------'

    # Search for folder with no mp3 in them
    # Does not delete nested folders (artist(no mp3)/album(mp3)) etc
    deleted=false # Flag to indicate deletion
    find -depth -type d | while read -r D
        do
        v=$(find "$D" -iname '*.mp3')
            case "$v" in
                ""  )
                    echo -e "->${WARN} $D ${ERROR}has no MP3!${NC}"
	                ls -A "$D" # List the directory contents
	                read -p "Do you want to delete the directory '$D'? (y/n): " choice < /dev/tty
	            case "$choice" in
	                [Yy]* )
	                    sudo rm -rf "$D" # DELETE THE DIRECTORY!
	                    echo "Directory deleted."
                        # Append the deleted directory and its contents to the log file
                        echo "$(date '+%Y-%m-%d %H:%M:%S') - Deleted: $D" >> "$LOG_FILE"
                        deleted=true  # Set the flag to indicate a deletion
	                    ;;
	                [Nn]* )
	                    echo "Directory not deleted."
	                    ;;
	                * )
	                    echo "Invalid choice. Directory not deleted."
	                    ;;
	            esac
	            ;;
            esac
    done

    if [ "$deleted" = false ]; then
        echo -e "${OK}No directories were deleted.${NC}"
    fi
}

warn_user;
remove_dirs;
echo -e "${OK}Done.${NC}"
