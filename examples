## EXAMPLE FORM (block commented)
: '
# useradd1.sh - A simple shell script to display the form dialog on screen
# set field names i.e. shell variables
shell=""
groups=""
user=""
home=""

# open fd
exec 3>&1

# Store data to $VALUES variable
VALUES=$(dialog --ok-label "Submit" \
	  --backtitle "Linux User Managment" \
	  --title "Useradd" \
	  --form "Create a new user" \
15 50 0 \
	"Username:" 1 1	"$user" 	1 10 10 0 \
	"Shell:"    2 1	"$shell"  	2 10 15 0 \
	"Group:"    3 1	"$groups"  	3 10 8 0 \
	"HOME:"     4 1	"$home" 	4 10 40 0 \
2>&1 1>&3)

# close fd
exec 3>&-

# display values just entered
echo "$VALUES"

i=0
while read -r line; do
   ((i++))
   declare var$i="${line}"
done <<< "${VALUES}"
echo "var2=${var2}"


##
I found the most efficient way is:

export $(xargs < .env)

Explanation

When we have a .env file like this:

key=val
foo=bar

run xargs < .env will get key=val foo=bar

so we will get an export key=val foo=bar and its exactly what we need!
 '

##USED EXAMPLES: (block commented)
: '
## EXAMPLE simple message (infobox)
dialog --infobox " Exibindo uma msg para o Usuario" 3 40
read

## EXAMPLE items with descrip. (menu)
ESCOLHA=$(dialog --stdout --menu 'Escolha Sua Opcao' \
       0 0 0 Item1 'descricao do Item1' \
             Item2 'Descricao do Item2' \
             Item3 'Descricao do Item3' \
             Item4 'Descricao do Item4' \
             Item5 'Descricao do Item5')
dialog --infobox "O Item Escolhido foi:\n $ESCOLHA" 4 30
read


## EXAMPLE DIALOG WITH MULTIPLE CHOICE (checklist)
cmd=(dialog --separate-output --checklist "Select options:" 22 76 16)
options=(1 "Option 1" off    # any option can be set to default to "on"
         2 "Option 2" off
         3 "Option 3" off
         4 "Option 4" off)
choices=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
clear
for choice in $choices
do
    case $choice in
        1)
            echo "First Option"
            ;;
        2)
            echo "Second Option"
            ;;
        3)
            echo "Third Option"
            ;;
        4)
            echo "Fourth Option"
            ;;
    esac
done

## EXAMPLE YESNO DIALOG
dialog --stdout --title "What to do?" \
  --backtitle "Backup-Verwaltung" \
  --yesno "Yes: Delete, No:  Restore" 7 60
dialog_status=$?

# Do something

if [ "$dialo_status" -eq 0 ]; then
  # The previous dialog was answered Yes
else
  # The previous dialog was answered No or interrupted with <C-c>
fi 
 '
