#!/bin/bash

## Fix/modify permissions of media files to work
## with arr* software or use manual custom entries.
## Uses 2775 for folders and 664 for files as standard.
## Tarso Galvao 08/04/23 Debian 11 (Based on Snortt's script)

## load enviroment variables
if [ -f $HOME/bmm/.env ]; then
    . $HOME/bmm/.env
else
    echo -e "FATAL ERROR: .env not found.$\n
	Use bmm-setup_enviroment to create one.\nAborting...";
    exit 1;
fi

## DO STUFF ($1-path $2-user $3-group)
fix_permissions () {
	if ! command -v $BANNER >> /dev/null; then echo -e "${WARN}BASH MEDIA MANAGER${NC}"; else eval "$BANNER"; fi
	for _dir in $1
	do
		echo '----------------------------------------------------------'
		echo -e "Processing path: $1..."
		sudo chown -R $2:$3 ${_dir} && echo -e "${WARN}Ownership: ${HEAD}$2:$3 ${OK}OK${NC}"
		echo 'Processing folders...'
		sudo find ${_dir} -type d -exec chmod 2775 {} \; && echo -e "${WARN}Folders: ${OK}OK${NC}"
		echo 'Processing files...'
		sudo find ${_dir} -type f -exec chmod 664 {} \; && echo -e "${WARN}Files: ${OK}OK${NC}"
	done
}

## user input entries (Custom)
custom_entry () {
	## get path
	path=$(dialog --no-lines --colors \
		--backtitle "\Z7Bash Media Manager" \
		--title "Media Permissions" \
		--inputbox "Enter full path: \n \
		( ex.: /full/path/to/dir/ )" 10 40 \
		3>&1 1>&2 2>&3 3>&-)
	clear #check path:
	if [ "$path" == "" ]; then echo -e "${ERROR}No path, aborting...${NC}"; sleep 2;
		clear && eval bmm-launcher; exit 1; fi
	## get user
	user=$(dialog --no-lines --colors \
		--backtitle "\Z7Bash Media Manager" \
		--title "Media Permissions" \
		--inputbox "Enter user: \n \
		( ex.: dietpi or 1000 )" 10 40 \
		3>&1 1>&2 2>&3 3>&-)
	clear #check user:
	if [ "$user" == "" ]; then echo -e "${ERROR}No user, aborting...${NC}"; sleep 2;
		clear && eval bmm-launcher; exit 1; fi
	## get group
	group=$(dialog --no-lines --colors \
		--backtitle "\Z7Bash Media Manager" \
		--title "Media Permissions" \
		--inputbox "Enter group: \n \
		( ex.: dietpi or 1000 )" 10 40 \
		3>&1 1>&2 2>&3 3>&-)
	clear #check group:
	if [ "$group" == "" ]; then echo -e "${ERROR}No group, aborting...${NC}"; sleep 2;
		clear && eval bmm-launcher; exit 1; fi
	## execute with user input args
	fix_permissions "$path" "$user" "$group"
}

main_menu () {
	checklist=(dialog --no-lines --colors \
		--backtitle "\Z7Bash Media Manager" \
		--separate-output --checklist "Select a preset: (use spacebar)" 22 76 16)
	options=(1 "Audio $AUDIO_OWNER:$GROUP" off    
			2 "Series $SERIES_OWNER:$GROUP" off
			3 "Movies $MOVIES_OWNER:$GROUP" off
			4 "Concerts $CONCERTS_OWNER:$GROUP" off
			5 "Stand-up $STANDUP_OWNER:$GROUP" off
			6 "Custom" off)
	choices=$("${checklist[@]}" "${options[@]}" 2>&1 >/dev/tty)
	clear
	for choice in $choices
	do
		case $choice in
			1)
				fix_permissions "$AUDIOROOT" "$AUDIO_OWNER" "$GROUP"
				;;
			2)
				fix_permissions "$SERIESROOT" "$SERIES_OWNER" "$GROUP"
				;;
			3)
				fix_permissions "$MOVIESROOT" "$MOVIES_OWNER" "$GROUP"
				;;
			4)
				fix_permissions "$CONCERTSROOT" "$CONCERTS_OWNER" "$GROUP"
				;;
			5)
				fix_permissions "$STANDUPROOT" "$STANDUP_OWNER" "$GROUP"
				;;
			6)
				custom_entry
				;;
		esac
	done
	## return on done or no entry
	## TODO: check exit status for proper exits!
	dialog --colors --no-lines \
        --backtitle "\Z7Bash Media Manager" \
        --infobox "Task complete." 3 19
    read
	clear && eval bmm-launcher; exit 0;
}

## STATUP OPTIONS
if [ "$1" = '-a' ] || [ "$1" = '--audio' ]; then
	fix_permissions "$AUDIOROOT" "$AUDIO_OWNER" "$GROUP"

elif [ "$1" = '-s' ] || [ "$1" = '--series' ]; then
	fix_permissions "$SERIESROOT" "$SERIES_OWNER" "$GROUP"

elif [ "$1" = '-m' ] || [ "$1" = '--movies' ]; then
	fix_permissions "$MOVIESROOT" "$MOVIES_OWNER" "$GROUP"

elif [ "$1" = '-c' ] || [ "$1" = '--concerts' ]; then
	fix_permissions "$CONCERTSROOT" "$CONCERTS_OWNER" "$GROUP"

elif [ "$1" = '-u' ] || [ "$1" = '--stand-up' ]; then
	fix_permissions "$STANDUPROOT" "$STANDUP_OWNER" "$GROUP"

elif [ "$1" = '-t' ] || [ "$1" = '--target' ]; then
	fix_permissions "$2" "$3" "$4"

elif [ "$1" = '-f' ] || [ "$1" = '--full' ]; then
	fix_permissions "$AUDIOROOT" "$AUDIO_OWNER" "$GROUP"
	fix_permissions "$SERIESROOT" "$SERIES_OWNER" "$GROUP"
	fix_permissions "$MOVIESROOT" "$MOVIES_OWNER" "$GROUP"
	fix_permissions "$CONCERTSROOT" "$CONCERTS_OWNER" "$GROUP"
	fix_permissions "$STANDUPROOT" "$STANDUP_OWNER" "$GROUP"

elif [ "$1" = '-h' ] || [ "$1" = '--help' ]; then
	if ! command -v $BANNER >> /dev/null; then echo -e "${WARN}BASH MEDIA MANAGER${NC}"; else eval "$BANNER"; fi
	echo -e "${HEAD}Media Permissions"
	echo -e "${OK}Fix file/folder permissons for media software.\n${NC}"
	echo -e "Use with no arguements to enter the GUI."
	echo -e "${WARN}WARNING: This is very slow on big libraries! Consider --target${NC}"
	echo -e "USAGE: bmm-media_permissions [-arg] [--arg]\n"
	echo -e " -a [--audio]		 -> Fix all audio permissions."
	echo -e " -s [--series]		 -> Fix all series permissions."
	echo -e " -m [--movies]		 -> Fix all movies permissions."
	echo -e " -c [--concerts]	 -> Fix all concerts permissions."
	echo -e " -u [--stand-up]	 -> Fix all stand-up permissions."
	echo -e " -t [--target]		 -> Manually enter desired settings. (recursive)"
	echo -e " 			    Usage: bmm-media_permissions [-t] [--target] /dir/path user group${NC}"
	echo -e " -f [--full]		 -> Fix all media permissions. USE WITH CAUTION."
	echo -e " -h [--help]		 -> Shows this screen."
else
	main_menu;
fi
