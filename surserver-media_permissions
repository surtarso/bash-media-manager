#!/bin/bash

## load enviroment variables
if [ -f /home/dietpi/bin/.env ]; then
    . /home/dietpi/bin/.env
else
    echo -e "${ERROR}FATAL ERROR: .env not found.${NC}\nAborting..."
	exit 1;
fi

## DO STUFF
fix_permissions () {
	for _dir in $1
	do
		echo "Processing $1..."
		sudo chown -R $2:$3 ${_dir} && echo -e "${WARN}Ownership: ${OK}OK${NC}"
		sudo find ${_dir} -type d -exec chmod 2775 {} \; && echo -e "${WARN}Folders: ${OK}OK${NC}"
		sudo find ${_dir} -type f -exec chmod 664 {} \; && echo -e "${WARN}Files: ${OK}OK${NC}"
	done
}

custom_entry () {
	path=$(dialog \
		--title "SurServer Media Permissions" \
		--inputbox "Enter full path: \n \
		( ex.: /full/path/to/dir/ )" 10 40 \
		3>&1 1>&2 2>&3 3>&-)
	clear
	if [ "$path" == "" ]; then echo -e "${ERROR}No path, aborting...${NC}"; sleep 2;
		clear && eval surserver-launcher; exit 1; fi
	user=$(dialog \
		--title "SurServer Media Permissions" \
		--inputbox "Enter user: \n \
		( ex.: dietpi or 1000 )" 10 40 \
		3>&1 1>&2 2>&3 3>&-)
	clear
	if [ "$user" == "" ]; then echo -e "${ERROR}No user, aborting...${NC}"; sleep 2;
		clear && eval surserver-launcher; exit 1; fi
	group=$(dialog \
		--title "SurServer Media Permissions" \
		--inputbox "Enter group: \n \
		( ex.: dietpi or 1000 )" 10 40 \
		3>&1 1>&2 2>&3 3>&-)
	clear
	if [ "$group" == "" ]; then echo -e "${ERROR}No group, aborting...${NC}"; sleep 2;
		clear && eval surserver-launcher; exit 1; fi
	fix_permissions $path $user $group
}

main_menu () {
	checklist=(dialog --separate-output --checklist "Select a preset: (use spacebar)" 22 76 16)
	options=(1 "Audio $AUDIO_OWNER:$GROUP" off    
			2 "Series $SERIES_OWNER:$GROUP" off
			3 "Movies $MOVIES_OWNER:$GROUP" off
			4 "Concerts $CONCERTS_OWNER:$GROUP" off
			5 "Custom" off)
	choices=$("${checklist[@]}" "${options[@]}" 2>&1 >/dev/tty)
	clear
	for choice in $choices
	do
		case $choice in
			1)
				fix_permissions $AUDIOROOT $AUDIO_OWNER $GROUP
				;;
			2)
				fix_permissions $SERIESROOT $SERIES_OWNER $GROUP
				;;
			3)
				fix_permissions $MOVIESROOT $MOVIES_OWNER $GROUP
				;;
			4)
				fix_permissions $CONCERTSROOT $CONCERTS_OWNER $GROUP
				;;
			5)
				custom_entry
				;;
		esac
	done
	## go back to launcher if nothins is selected
	clear && eval surserver-launcher; exit 1;
}

## STATUP OPTIONS
if [ "$1" = '-a' ] || [ "$1" = '--audio' ]; then
	fix_permissions $AUDIOROOT $AUDIO_OWNER $GROUP

elif [ "$1" = '-s' ] || [ "$1" = '--series' ]; then
	fix_permissions $SERIESROOT $SERIES_OWNER $GROUP

elif [ "$1" = '-m' ] || [ "$1" = '--movies' ]; then
	fix_permissions $MOVIESROOT $MOVIES_OWNER $GROUP

elif [ "$1" = '-c' ] || [ "$1" = '--concerts' ]; then
	fix_permissions $CONCERTSROOT $CONCERTS_OWNER $GROUP

elif [ "$1" = '-t' ] || [ "$1" = '--target' ]; then
	fix_permissions $2 $3 $4

elif [ "$1" = '-h' ] || [ "$1" = '--help' ]; then
	echo -e "${OK}SurServer Media Permissions${NC}"
	echo -e "Fix file/folder permissons for media software."
	echo -e "${WARN}Folders: Folders, owners and group are set up in .evn file.${NC}"
	echo -e "USAGE: surserver-media_permissions [-arg] [--arg]\n"
	echo -e " -a [--audio]		 -> Fix all audio permissions"
	echo -e " -s [--series]		 -> Fix all series permissions"
	echo -e " -m [--movies]		 -> Fix all movies permissions"
	echo -e " -c [--concerts]	 -> Fix all concerts permissions"
	echo -e "${WARN} -s [--target]		 -> Manually enter desired settings."
	echo -e " Usage: surserver-media_permissions [-s] [--target] /dir/path user group${NC}"
	echo -e " -h [--help]		 -> Shows this screen."
else
	main_menu;
fi