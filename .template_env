## ---------------------- FOLDERS SETUP
## PLEASE READ: * Locations MUST END with '/' 
##              * Locations MUST BE FULL path '/root/of/files/'
##              * rsync will send CONTENTS of source to ROOT of dest.
##                  ( ex: /my/use/files/* --> /my/bkp/files/ )
##              * Locations MUST EXIST prior to running scripts

## audio subsection
AUDIOROOT="/mnt/vault/music/"
AUDIOBACKUP="/mnt/vault/music_bkp/"
AUDIOJUNK="/mnt/vault/music/.converted_junk_files/"

## all videos subsection
VIDEOSROOT="/mnt/vault/videos/"
VIDEOSBACKUP="/mnt/vault/videos_bkp/"
VIDEOSJUNK="/mnt/vault/videos/junk/"

## series subsection
SERIESROOT="/mnt/vault/videos/series/"
SERIESBACKUP="/mnt/vault/videos_bkp/series/"

## movies subsection
MOVIESROOT="/mnt/vault/videos/movies/"
MOVIESBACKUP="/mnt/vault/videos_bkp/movies/"

## concerts subsection
CONCERTSROOT="/mnt/vault/videos/shows/"
CONCERTSBACKUP="/mnt/vault/videos_bkp/shows/"

## permissions
AUDIO_OWNER="lidarr"
SERIES_OWNER="sonarr"
MOVIES_OWNER="radarr"
CONCERTS_OWNER="radarr"
GROUP="goodies"

## ------------------------ SCRIPT SETTINGS (auto)
## bash colors
OK='\033[0;32m'     #green
WARN='\033[1;33m'   #yellow
ERROR='\033[0;31m'  #red
NC='\033[0m'        #no color

## ------------------------- FUNCTIONS
## dependencies (usage-> dep_check packagename)
dep_check () {
    if [ "$(dpkg -l | grep -ci -m1 $1)" -eq 0 ]; then
        echo -e "${ERROR}$1 not found!${NC} Install package(s)? (Y/n) \c"
        read -r yesno < /dev/tty
            if [ "$yesno" = "n" ] || [ "$yesno" = "N" ]; then
                echo -e "${WARN}Cannot continue without $1 package!"
                echo -e "Manually install with sudo apt install $1"
                echo -e "Aborting...${NC}"
                exit 1
            else
                #todo: add check for sudo privileges
                sudo apt update
                sudo apt install $1 -y
            fi
    else
        echo -e "$1: ${OK}Found${NC}"
    fi
}