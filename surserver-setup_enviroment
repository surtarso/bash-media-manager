#!/bin/bash

## create new .env file or update(change) enviroment variables in .env file

# this script should be able to generate a new .env file in case one is not found
# it should also be able to edit an existing .env file with new settings easily
# should be noob-proof.

#TODO: add PATH automagically
# echo 'export PATH="$HOME/smm:$PATH"' >> $HOME/.bashrc && . $HOME/.bashrc

ENV_FILE="$HOME/bmm/.env"            #work env
TEMPLATE="$HOME/bmm/.template_env"   #fixed template
## edit or create new env file
if [ -f $ENV_FILE ]; then . $ENV_FILE;
else cp $TEMPLATE $ENV_FILE && . $ENV_FILE || { 
    echo -e "FATAL ERROR: Could not create env file.\nAborted."; exit 1;};
fi

#folders setup, user/groups setup
main_form () {
    # open fd
    exec 3>&1
    # Store lines to $filled_form
    filled_form=$(dialog --ok-label "Update" --no-cancel --colors\
            --backtitle "\Z5Bash Media Manager" \
            --title "SurServer Setup Enviroment" \
            --form "            Fill in all fields or some features will not work.\n
                Make sure paths start and end with '/'." \
        25 80 0 \
        "Audio root folder:"        1 2	"$AUDIOROOT" 	    1 27 46 0 \
        "Audio backup folder:"      2 2	"$AUDIOBACKUP"  	2 27 46 0 \
        "Audio junk folder:"        3 2	"$AUDIOJUNK"  	    3 27 46 0 \
        "Videos junk folder:"       4 2	"$VIDEOSJUNK"  	    4 27 46 0 \
        "Series root folder:"       5 2	"$SERIESROOT" 	    5 27 46 0 \
        "Series backup folder:"     6 2	"$SERIESBACKUP"  	6 27 46 0 \
        "Movies root folder:"       7 2	"$MOVIESROOT" 	    7 27 46 0 \
        "Movies backup folder:"     8 2	"$MOVIESBACKUP"  	8 27 46 0 \
        "Concerts root folder:"     9 2	"$CONCERTSROOT" 	9 27 46 0 \
        "Concerts backup folder:"  10 2	"$CONCERTSBACKUP"  	10 27 46 0 \
        "User owner of audios:"    11 2	"$AUDIO_OWNER"  	11 27 46 0 \
        "User owner of series:"    12 2	"$SERIES_OWNER"  	12 27 46 0 \
        "User owner of movies:"    13 2	"$MOVIES_OWNER"  	13 27 46 0 \
        "User owner of concerts:"  14 2	"$CONCERTS_OWNER"  	14 27 46 0 \
        "Group owner of media:"    15 2	"$GROUP"  	        15 27 46 0 \
        2>&1 1>&3)
    # close fd
    exec 3>&-

    ## FIX ME: 1st (filled) line gets removed if we press ESC
    
    ## TODO: check for / on start/end of folder fields...
    # Keys must maintain same order as form fields.
    keys=(AUDIOROOT AUDIOBACKUP AUDIOJUNK VIDEOSJUNK SERIESROOT SERIESBACKUP \
            MOVIESROOT MOVIESBACKUP CONCERTSROOT CONCERTSBACKUP AUDIO_OWNER \
            SERIES_OWNER MOVIES_OWNER CONCERTS_OWNER GROUP)
    i=0
    # Reads $filled_form and sed key#=line# to .env (ex GROUP="root")
    while read -r line; do
        sed -i -e '/'"${keys[((i++))]}"'=/ s|=.*|='"\"${line}\""'|' $ENV_FILE
    done <<< "${filled_form}"

    # return to launcher
    clear && eval surserver-launcher; exit 1;
}

## ARGUEMENTS
if [ "$1" = '-t' ] || [ "$1" = '--template' ]; then
    #dont overwrite .env if it exists
    if [ -f $ENV_FILE ]; then echo -e "$ENV_FILE exists!!!\nManually delete it if you want to reset to a template."; exit 1; fi
    echo -e "Creating new env file from template at $ENV_FILE"
    cp $TEMPLATE $ENV_FILE || { echo -e "Could not create $ENV_FILE.\Maybe check permissions...\nAborted."; exit 1; }

elif [ "$1" = '-p' ] || [ "$1" = '--path' ]; then
    echo 'export PATH="$HOME/bmm:$PATH"' >> $HOME/.bashrc && . $HOME/.bashrc
    echo 'You may need to reload bashrc (. .bashrc) or log out and in again.'

elif [ "$1" = '-h' ] || [ "$1" = '--help' ]; then
    echo -e "${OK}SurServer Setup Enviroment${NC}"
    echo -e "Create new .env file or update enviroment variables in .env file"
    echo -e "Usage: surserver-setup_enviroment [-arg] [--arg]\n"
    echo -e " -p [--path]      -> Adds software root to PATH"
    echo -e " -t [--template]  -> Creates new env file from template."
    echo -e " -h [--help]      -> Shows this screen."
else
    main_form;
fi