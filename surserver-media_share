#!/bin/bash

## A better way to choose media to share with friends or backup
## checklist select of folders to copy to another set location
## Tarso Galvao 06/04/23 Debian 11


## load enviroment variables
if [ -f $HOME/bmm/.env ]; then
    . $HOME/bmm/.env
else
    echo -e "FATAL ERROR: .env not found.$\n
	Use surserver-setup_enviroment to create one.\nAborting...";
    exit 1;
fi


copy_media (){
	dep_check rsync; #check for rsync (dest should have rsync too... how to confirm?)
	echo -e "${WARN}Now running: ${OK}rsync -avzP ${WARN}$source ${OK}$dest${NC}"
	echo -e "\n${ERROR}Press ${WARN}'Control + C'${ERROR} to abort.${NC}"
	for (( i=3; i>0; i--)); do sleep 1 & printf "            $i \r"; wait; done
	## start syncing
	eval $(echo -e "rsync -avzP $source $dest")
}

## get lines chosen and print dir name in quotes for cp/rsync command
get_selections () { #$1-folder_content.txt $2-line number $3-media rootfolder
	dir_list="$1"	#list of all folders on dirs
	line_choice=$2	#list of all lines (folders) chosen
	i=0				#reset start line to read
	while read line; do
		((i++))
		test $i = $line_choice && echo "$3\"$line\" ";  #list of choices for array
	done < "$dir_list"
}

## create checklist with directory(root_dir) contents
create_checklist () {
	## create a file in root folder with its folders
	if [ -f $1.folder_content.txt ]; then rm $1.folder_content.txt;
	else eval $(touch $1.folder_content.txt); fi
	ls $1 >> $1.folder_content.txt

	## create dynamic options for each dir
	c=0 #reset counter
	while IFS=$'\n' read -r line; do c=$(expr $c + 1); options+=($c "$line" off); done < $1.folder_content.txt

	## print options (dialog checklist)
	checklist=(dialog --separate-output --colors \
		--backtitle "\Z5Bash Media Manager" \
		--title "SurServer Media Share" \
		--checklist "Select content(s):" 22 76 16)
	choices=$("${checklist[@]}" "${options[@]}" 2>&1 >/dev/tty)
	clear

	## create array with choice results
	if [ "$choices" != "" ]; then
		for choice in $choices
		do  #get_selections() $1-folder_content.txt $2-line number $3-rootfolder
			source+=$(get_selections $1.folder_content.txt $choice $1);
		done
	else #return to launcher
		echo -e "${ERROR}No selection, aborting...${NC}"; sleep 2;
		clear && eval surserver-launcher; exit 1;
	fi
	
	## set destination (user input dialog)
	dest=$(dialog --colors \
		--backtitle "\Z5Bash Media Manager" \
		--title "SurServer Media Share" \
        --inputbox "Enter destination full path: \n \
		(ex.: /full/path/to/dir/ or user@ip.ad.dr.ess:/location/ )" 10 40 \
		3>&1 1>&2 2>&3 3>&-)
	clear

	## copy CHOICES to DESTINATION
	if [ "$dest" != "" ]; then
		copy_media $source $dest;
	else #return to launcher
		echo -e "${ERROR}No destination, aborting...${NC}"; sleep 2;
		clear && eval surserver-launcher; exit 1;
	fi
}

## choose media type to share (interactive mode)
main_menu () {
	root_dir=$(dialog --stdout --colors \
		--backtitle "\Z5Bash Media Manager" \
		--title "SurServer Media Share" \
		--menu 'Select media source:' 0 0 0 \
			$AUDIOROOT 'Audio/Music' \
			$SERIESROOT 'Series' \
			$MOVIESROOT 'Movies' \
			$CONCERTSROOT 'Concerts' \
			Quit '')
	## Exit on Quit or Cancel || Execute chosen script.
	if [ $root_dir = 'Quit' ] || [ $? -ne 1 ]; then
		clear && eval surserver-launcher; exit 1;
	else
		##TODO: check if folder exists 1st
		create_checklist $root_dir;
	fi
}

## STARTUP OPTIONS
if [ "$1" = '-a' ] || [ "$1" = '--audio' ]; then
	create_checklist $AUDIOROOT;

elif [ "$1" = '-s' ] || [ "$1" = '--series' ]; then
	create_checklist $SERIESROOT;

elif [ "$1" = '-m' ] || [ "$1" = '--movies' ]; then
	create_checklist $MOVIESROOT;

elif [ "$1" = '-c' ] || [ "$1" = '--concerts' ]; then
	create_checklist $CONCERTSROOT;

elif [ "$1" = '-h' ] || [ "$1" = '--help' ]; then
	echo -e "${OK}SurServer Media Share${NC}"
	echo -e "Easily share server media to other devices."
	echo -e "Use with no arguements to enter the GUI."
	echo -e "USAGE: surserver-media_share [-arg] [--arg]\n"
	echo -e " -a [--audio]			-> Choose AUDIO to share"
	echo -e " -s [--series]			-> Choose SERIES to share"
	echo -e " -m [--movies]			-> Choose MOVIES to share"
	echo -e " -c [--concerts]		-> Choose CONCERTS to share"
	echo -e " -h [--help]			-> Shows this screen."
else
	main_menu;
fi
